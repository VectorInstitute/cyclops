name: docs release

on:
    pull_request:
      branches:
        - main
      paths:
        - .pre-commit-config.yaml
        - .github/workflows/docs_release.yml
        - '**.py'
        - '**.ipynb'
        - '**.html'
        - '**.jinja'
        - '**.js'
        - poetry.lock
        - pyproject.toml
        - '**.rst'
        - '**.md'
        - docs/cyclops-webpage
      types: [labeled, closed, synchronize]

jobs:
  release-build:
    if: contains(github.event.pull_request.labels.*.name, 'release') || (github.event.action == 'closed' && github.event.pull_request.merged == true) || (github.event.action == 'synchronize' && contains(github.event.pull_request.labels.*.name, 'release'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          submodules: 'true'
      - name: Install poetry
        run: python3 -m pip install --upgrade pip && python3 -m pip install poetry
      - uses: actions/setup-python@v5.1.0
        with:
          python-version: '3.10'
          cache: 'poetry'
      - name: Install dependencies, build docs with running notebooks
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          python3 -m pip install --upgrade pip && python3 -m pip install poetry
          poetry env use '3.10'
          source $(poetry env info --path)/bin/activate
          poetry install --with docs,test --all-extras

          # Set up Kaggle credentials
          mkdir -p ~/.kaggle
          echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

          # Install Pandoc
          PANDOC_VERSION="2.19"
          curl -sLo- "https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-linux-amd64.tar.gz" | tar xzf - --strip-components 2 -C /usr/local/bin --exclude="share"

          cd docs
          rm -rf source/reference/api/_autosummary
          make html-with-notebooks
      - name: Set up Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18
          cache: yarn
          cache-dependency-path: '**/yarn.lock'
      - name: Build webpage
        run: |
          cd docs/cyclops-webpage
          yarn install --frozen-lockfile
          yarn build
          cp -r ../build/html build/api
      - name: Deploy to GitHub Pages
        if: github.event.action == 'closed' && github.event.pull_request.merged == true
        uses: peaceiris/actions-gh-pages@v4.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: github_pages
          publish_dir: docs/cyclops-webpage/build
