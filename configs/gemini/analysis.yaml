---
# Type of analysis to perform ('dataset' for dataset drift, 'performance' for classification model comparison).
type: "dataset"

slice: ""
# Two ways to read data for dataset drift analysis:
# 1) if 'slice' column is specified then we read from 'input' file, and slice by data_ref, data_eval values
# 2) if 'slice' is not specified, read two input files 'reference', 'test'

# Model performance report requires 'reference' and 'test' input files containing prediction_col.
reference: "./gemini_val_result.csv"
test: "./gemini_test_result.csv"

data_ref: []
data_eval: []

# Column mapping for evidently analysis,
numerical_features: [
  "age",
  "los_er"
]
categorical_features: [
  "hospital_id",
  "sex",
  "mort_hosp",
  "readmission_7",
  "readmission_28",
  "palliative",
  "icd10_A00_B99",
  "icd10_C00_D49",
  "icd10_D50_D89",
  "icd10_E00_E89",
  "icd10_F01_F99",
  "icd10_G00_G99",
  "icd10_H00_H59",
  "icd10_H60_H95",
  "icd10_I00_I99",
  "icd10_J00_J99",
  "icd10_K00_K95",
  "icd10_L00_L99",
  "icd10_M00_M99",
  "icd10_N00_N99",
  "icd10_O00_O99",
  "icd10_Q00_Q99",
  "icd10_R00_R99",
  "icd10_S00_T88",
  "icd10_Z00_Z99"
]
prediction_col: "prediction"
# Also uses 'target' parameter defined above.

# Path for auto-generated reports, specify 'report_full_path' for custom report names
report_path: './_reports'
report_full_path: ""

# Generate HMTL report, otherwise it's JSON
html: True
