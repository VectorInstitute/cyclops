[tool.poetry]
name = "pycyclops"
version = "0.1.28"
description = "Framework for healthcare ML implementation"
authors = ["Vector AI Engineering <cyclops@vectorinstitute.ai>"]
license = "Apache-2.0"
repository = "https://github.com/VectorInstitute/cyclops"
documentation = "https://vectorinstitute.github.io/cyclops/"
packages = [
    { include = "cyclops" },
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
pandas = "^1.4.1"
numpy = "<=1.23.0"
spacy = { version = "^3.2.1", extras = ["lookups"] }
pyarrow = { version = "^11.0.0", optional = true }
psycopg2 = { version = "2.9.6", optional = true }
hydra-core = { version = "^1.2.0", optional = true }
SQLAlchemy = { version = "^1.4.32, <2.0", optional = true }
dask = { version = "^2022.9.1", optional = true, extras = ["dataframe"] }
torch = { version = "^1.11.0", optional = true }
xgboost = { version = "^1.5.2", optional = true }
torchxrayvision = { version = "^0.0.37", optional = true }
alibi = { version = "^0.8.0", optional = true, extras = ["shap"] }
alibi-detect = { version = "^0.10.4", optional = true, extras = ["torch"] }
llvmlite = { version = "0.38.0", optional = true }
datasets = { version = "^2.10.1", optional = true }
monai = { version = "^1.1.0", optional = true, extras = ["itk"] }
psutil = { version = "^5.9.4", optional = true }

[tool.poetry.group.query.dependencies]
pyarrow = "^11.0.0"
psycopg2 = "^2.9.5"
hydra-core = "^1.2.0"
SQLAlchemy = "^1.4.32, <2.0"
dask = { version = "^2022.9.1", extras = ["dataframe"] }

[tool.poetry.group.evaluate.dependencies]
torch = "^1.11.0"
xgboost = "^1.5.2"
datasets = "^2.10.1"
monai = { extras = ["itk"], version = "^1.1.0" }
psutil = "^5.9.4"

[tool.poetry.group.monitor.dependencies]
hydra-core = "^1.2.0"
torchxrayvision = "^0.0.37"
spacy = { version = "^3.2.1", extras = ["lookups"] }
alibi = { version = "^0.8.0", extras = ["shap"] }
alibi-detect = { version = "^0.10.4", extras = ["torch"] }
llvmlite = "0.38.0"
datasets = "^2.10.1"
monai = { extras = ["itk"], version = "^1.1.0" }
psutil = "^5.9.4"

[tool.poetry.group.dev.dependencies]
seaborn = "^0.11.2"
plotly = "^5.7.0"
matplotlib = "^3.5.1"
mlflow = "^1.24.0"
jupyter = "^1.0.0"
jupyterlab = "^3.4.2"
prefect = "^2.7.10"
ipympl = "^0.9.3"
evidently = "^0.2.8"
verifyml = "^0.0.6"
protobuf = "3.20.0"
ipywidgets = "^8.0.6"

[tool.poetry.group.codestyle.dependencies]
pytest = "^7.1.1"
pylint = "^2.12.2"
pre-commit = "^2.17.0"
black = "^22.1.0"
pyproject-flake8 = "^5.0.4"
pytest-cov = "^3.0.0"
codecov = "^2.1.13"
nbstripout = "^0.6.1"
mypy = "^1.0.0"

[tool.poetry.group.docs.dependencies]
numpydoc = "^1.2"
Sphinx = "^4.4.0"
sphinx-rtd-theme = "1.1.1"
sphinxcontrib-apidoc = "^0.3.0"
sphinx-autodoc-typehints = "^1.18.1"
myst-parser = "^0.18.0"
sphinx-copybutton = "^0.5.0"
sphinx-autoapi = "^2.0.0"
nbsphinx = "^0.8.11"
ipython = "^8.8.0"
ipykernel = "^6.23.0"
kaggle = "^1.5.13"
plotly = "^5.7.0"

[tool.poetry.group.interface.dependencies]
dash = "^2.4.1"
dash-iconify = "^0.1.2"
dash-mantine-components = "^0.10.2"
dash-cool-components = "0.1.8"
dash-bootstrap-components = "^1.1.0"
Flask-Caching = "^1.10.1"


[tool.poetry.group.report.dependencies]
pydantic = "^1.10.7"

[tool.poetry.extras]
query = ["SQLAlchemy", "psycopg2", "pyarrow", "dask", "hydra-core"]
evaluate = ["torch", "xgboost", "datasets", "monai"]
monitor = ["hydra-core", "torchxrayvision", "alibi", "alibi-detect", "llvmlite"]

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
install_types = true
pretty = true
namespace_packages = true
explicit_package_bases = true
non_interactive = true
warn_unused_configs = true
allow_any_generics = false
allow_subclassing_any = false
allow_untyped_calls = false
allow_untyped_defs = false
allow_incomplete_defs = false
check_untyped_defs = true
allow_untyped_decorators = false
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
implicit_reexport = false
strict_equality = true
strict_concatenate = true

[tool.pylint]
    [tool.pylint.master]
    disable=["import-error", "duplicate-code", "no-value-for-parameter"]

    [tool.pylint.format]
    max-line-length=88
    max-args=20
    max-attributes=20
    max-branches=15
    max-locals=40
    max-statements=100
    min-public-methods=1

    [tool.pylint.typecheck]
    generated-members=["numpy.*", "torch.*"]

    [tool.pylint.similarities]
    ignore-imports=["yes"]

    [tool.pylint.basic]
    good-names=["i", "j", "k", "ex", "Run", "X", "x", "y", "df", "fc", "h0", "hn", "c0", "cn", "id", "ax", "tn", "fn", "tp", "fp", "TN", "FN", "TP", "FP", "lr", "db"]
    good-names-rgxs=["X_.+", "x_.+", "y_.+", "df_.+"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "F401"]

[tool.pytest.ini_options]
markers = [
    "integration_test: marks tests as integration tests",
]

[tool.coverage]
    [tool.coverage.run]
    source=["cyclops"]
    omit=["tests/*", "*__init__.py"]

[tool.nbqa.addopts]
flake8 = [
    "--max-line-length=88"
]

[tool.nbqa.exclude]
flake8 = "tutorials/mimiciv/query_api_developer.ipynb"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
