[tool.poetry]
name = "pycyclops"
version = "0.1.6"
description = "Framework for healthcare ML implementation"
authors = ["Vector AI Engineering <cyclops@vectorinstitute.ai>"]
license = "Apache-2.0"
repository = "https://github.com/VectorInstitute/cyclops"
documentation = "https://vectorinstitute.github.io/cyclops/"
packages = [
    { include = "cyclops" },
]
readme = "README.md"

[tool.poetry.dependencies]
python = ">= 3.8, <3.11"
pandas = "^1.4.1"
SQLAlchemy = "^1.4.32"
python-dotenv = "^0.19.2"
matplotlib = "^3.5.1"
torch = "^1.11.0"
shap = "^0.40.0"
xgboost = "^1.5.2"
tables = "^3.7.0"
pyarrow = "^7.0.0"
llvmlite = "0.38.0"
psycopg2-binary = "^2.9.3"
plotly = "5.7.0"
pyparsing = "3.0.8"
colorama = "^0.4.4"
prefect = "2.0b6"
seaborn = "^0.11.2"
torchxrayvision = "^0.0.37"
hydra-core = "^1.2.0"
dask = {extras = ["dataframe"], version = "^2022.9.1"}
protobuf = "3.20.0"
alibi = {version = "^0.8.0", extras = ["shap"]}
alibi-detect = {version = "^0.10.4", extras = ["torch"]}

[tool.poetry.group.dev.dependencies]
evidently = "0.1.45.dev0"
mlflow = "^1.24.0"
jupyter = "^1.0.0"
jupyterlab = "^3.4.2"

[tool.poetry.group.codestyle.dependencies]
pytest = "^7.1.1"
pylint = "^2.12.2"
pre-commit = "^2.17.0"
black = "^22.1.0"
pyproject-flake8 = "5.0.4"
pytest-cov = "^3.0.0"
codecov = "^2.1.12"

[tool.poetry.group.docs.dependencies]
numpydoc = "^1.2"
Sphinx = "^4.4.0"
sphinx-rtd-theme = "^1.0.0"
sphinxcontrib-apidoc = "^0.3.0"
sphinx-autodoc-typehints = "^1.18.1"
myst-parser = "^0.18.0"
sphinx-copybutton = "^0.5.0"

[tool.poetry.group.interface.dependencies]
dash = "^2.4.1"
dash-iconify = "^0.1.2"
dash-mantine-components = "^0.10.2"
dash-cool-components = "0.1.8"
dash-bootstrap-components = "^1.1.0"
Flask-Caching = "^1.10.1"

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
install_types = true
pretty = true
non_interactive = true

[tool.pylint]
    [tool.pylint.master]
    disable=["import-error", "duplicate-code", "no-value-for-parameter"]

    [tool.pylint.format]
    max-line-length=88
    max-args=20
    max-attributes=20
    max-branches=15
    max-locals=40
    max-statements=100
    min-public-methods=1

    [tool.pylint.typecheck]
    generated-members=["numpy.*", "torch.*"]

    [tool.pylint.similarities]
    ignore-imports=["yes"]

    [tool.pylint.basic]
    good-names=["i", "j", "k", "ex", "Run", "X", "x", "y", "df", "fc", "h0", "hn", "c0", "cn", "id", "ax", "tn", "fn", "tp", "fp", "TN", "FN", "TP", "FP"]
    good-names-rgxs=["X_.+", "x_.+", "y_.+", "df_.+"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "F401"]

[tool.pytest.ini_options]
markers = [
    "integration_test: marks tests as integration tests",
]

[tool.coverage]
    [tool.coverage.run]
    source=["cyclops"]
    omit=["tests/*", "*__init__.py"]

[tool.nbqa.addopts]
flake8 = [
    "--max-line-length=88"
]

[tool.nbqa.exclude]
flake8 = "tutorials/mimiciv/query_api_developer.ipynb"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
