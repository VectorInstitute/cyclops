<!DOCTYPE html>


{% import "macros.jinja" as macros %}


{# Get indices of all metric cards for 'overall' slice #}
{% set overall_indices = [] %}
{% for metric_card in model_card.overview.metric_cards.collection%}
  {% if metric_card.slice == 'overall' %}
    {% set _ = overall_indices.append(loop.index-1) %}
  {% endif %}
{% endfor %}


<html lang="en">
  <head>
    {# <meta id="slices" data-slices="{{ get_slices(model_card)|safe }}" /> #}
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial_scale=1">
    {# <link href="css/bootstrap.min.css" rel="stylesheet"> #}
    {# <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"> #}
    {# <script src="js/bootstrap.bundle.min.js"></script> #}
    {# <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script> #}
    <style>
      html {
        scroll-behavior: smooth;
      }

      body {
        font-family: Arial, Helvetica, sans-serif;
        min-width: 1150px;
      }

      h2 {
        color: #214d87;
        flex-basis: 100%;
      }

      h3 {
        color: #0073e4;
        flex-basis: 100%;
      }
      .card {
        display: flex;
        flex-wrap: wrap;
        flex-basis: 100%;
        justify-content: left;
        padding: 1em;
        border: 1px solid #DADCE0;
        margin: 10px;
        background-color: #ffffff;
        border-radius: 5px;
      }

      .subcard {
        padding: 30px;
        border: 1px solid #DADCE0;
        margin: 10px;
        background-color: #f3f4f6;
        border-radius: 5px;
        box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.1);
      }

      .subcard_overview {
        padding: 30px;
        border: 1px solid #DADCE0;
        margin: 10px;
        background-color: #f3f4f6;
        border-radius: 5px;
        box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, 0.1);
      }

      ul li {
        width: 100%;
        float:left;
      }

      .img-item {
        flex-basis: 100%;
        margin-top: 10px;
        margin-bottom: 10px;
      }

      #banner {
        width: 100%;
        height: 170px;
        position: relative;
        z-index: 0;
        top: 0;
        left: 0;
      }

      #banner #logo {
        float: left;
        max-width: 500px;
        width: auto;
        height: auto;
      }

      #logo {
        margin-top: 50px;
        padding-bottom: 10px;
        float: left;
        max-width: 200px;
        width: auto;
        height: auto;
      }

      #sidebar {
        background-color: #ffffff;
        height: 100%;
        width: 15rem;
        position: fixed;
        z-index: 1;
        top: 0;
        left: 0;
        display: block;
        box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.2);
        transition: left 0.2s ease-in-out;
      }

      #sidebar-btn:hover {
        background-color: rgba(247, 247, 248, 0.9);
        border-radius: 5px;
        cursor: pointer;
      }

      #sidebar-toggle {
        display: none;
      }

      #sidebar-btn {
        position: fixed;
        top: 10px;
        left: 190px;
        z-index: 2;
        border: none;
        padding: 0.25rem 0.5rem;
        background-color: #ffffff;
        transition: left 0.2s ease-in-out;
        outline: 2px solid #0000001a;
        border-radius: 5px;
      }

      #sidebar-toggle:checked+#sidebar-btn+#sidebar {
        left: -16rem;
      }

      #sidebar-toggle:checked+#sidebar-btn+#sidebar>hr {
        margin: 0.5em 0.5em 0.5em 12.5em;
      }

      hr {
        border: 0.75px solid;
        color: #e5e7eb;
        opacity: 0.7;
        margin: 0.5em 0.5em 0.5em 0.5em;
        transition: margin 0.2s ease-in-out;
      }

      #sidebar-toggle:checked+#sidebar-btn {
        left: 10px;
      }

      #sidebar-toggle:checked~#container {
        margin-left: 50px;
      }

      #sidebar .title {
        display: block;
        font-size: .75rem;
        line-height: 1rem;
        font-weight: 900;
        padding: 3.0rem 1rem 0rem 1rem
      }

      #sidebar #contents {
        list-style: none;
        padding: 0;
        margin: 0;
        margin-left: 10px;
        margin-right: 40px;
      }

      #sidebar #contents .button:hover {
        background-color: rgba(0, 115, 228, 0.3);
        cursor: pointer;
      }

      .active {
        background-color: rgba(0, 115, 228, 0.3);
        cursor: pointer;
      }

      #sidebar .button {
        display: block;
        font-size: .75rem;
        line-height: 0.5rem;
        font-weight: 500;
        font-size: 15px;
        padding: 1rem 1rem 1rem 1rem;
        text-decoration: none;
        color: #000000;
      }

      #sidebar #button_min {
        display: none;
        float: right;
        font-size: .75rem;
        line-height: 0.5rem;
        font-weight: 500;
        font-size: 15px;
        margin-top: -2.5rem;
        padding: 1rem 1rem 1rem 1.3rem;
        text-decoration: none;
        color: #000000;
      }

      #sidebar #button_min:hover {
        background-color: rgba(0, 0, 0, 0.3);
        border-radius: 5px;
        cursor: pointer;
      }

      #container {
        max-width: 100%;
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        margin-left: 250px;
        margin-right: 25px;
        transition: margin-left 0.2s ease-in-out;
      }

      #model_info_card {
        width: 100%;
        background-color: #0073e4;
        text-align: left;
        color: white;
        display: inline-block;
      }

      #model_info {
        padding-top: 2.5rem;
        padding-left: 1rem;
      }

      body {
        background-color: #f3f4f6;
      }

      .styled-table {
        border-spacing: 0;
        border-collapse: separate;
        border-radius: 10px;
        border: 3px solid #0073e4;
        margin: 25px;
        font-size: 16px;
        font-family: Arial, Helvetica, sans-serif;
        min-width: 200px;
        box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.2);
      }

      .styled-table-pass {
        border-spacing: 0;
        border-collapse: separate;
        border-radius: 10px;
        border: 3px solid green;
        font-size: 16px;
        font-family: Arial, Helvetica, sans-serif;
        min-width: 200px;
        box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.2);
      }

      .styled-table-fail {
        border-spacing: 0;
        border-collapse: separate;
        border-radius: 10px;
        border: 3px solid red;
        font-size: 16px;
        font-family: Arial, Helvetica, sans-serif;
        min-width: 200px;
        box-shadow: 6px 6px 6px 0px rgba(0, 0, 0, 0.2);
      }

      th {
        padding: 12px 15px;
        color: white;
        background-color: #0073e4;
      }

      tbody tr {
        border-bottom: 1px solid #dddddd;
      }

      tr:nth-of-type(even) {
        background-color: #ffffff;
      }

      caption {
        font-weight: bold;
      }

      .tooltip {
        position: relative;
        display: inline-block;
      }

      .tooltip .tooltiptext {
        visibility: hidden;
        width: 120px;
        background-color: black;
        color: #fff;
        text-align: center;
        padding: 5px;
        font-size: 12px;
        font-weight:lighter;
        position: absolute;
        z-index: 1;
        bottom: 30px;
        left: 50%;
        transform: translateX(-50%);
        opacity: 0;
        transition: opacity 0.2s;
      }

      .tooltip .tooltiptext .arrow-up {
        width: 0;
        height: 0;
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-bottom: 10px solid black;
        position: absolute;
        bottom: -10px;
        left: 45%;
        transform: translateX(-50%);
        transform: scaleY(-1);
      }

      .tooltip:hover .tooltiptext {
        visibility: visible;
        opacity: 1;
      }

      .tooltip:hover {
        color:#0073e4;
      }

      .radio-buttons {
        display: flex;
        row-gap: 15px;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: left;
        align-items: center;
      }

      input[type="radio"] {
        display: none;
      }

      .radio-buttons label {
        font-size:14px;
        cursor: pointer;
        padding: 5px 20px;
        margin: 0px;
        margin-top: 2px;
        margin-bottom: 2px;
        color: black;
        text-align: center;
        transition: background-color 0.3s ease;
        background-color: #ffffff;
        border: 2px solid #DADCE0;
        white-space: nowrap;
      }

      .radio-buttons label:not(:first-child):not(:last-child) {
        border-top: 2px solid #DADCE0;
        border-bottom: 2px solid #DADCE0;
        border-left: 1px solid #DADCE0;
        border-right: 1px solid #DADCE0;
      }

      .radio-buttons .tooltip label:not(:first-child):not(:last-child) {
        border-top: 2px solid #DADCE0;
        border-bottom: 2px solid #DADCE0;
        border-left: 1px solid #DADCE0;
        border-right: 1px solid #DADCE0;
      }

      .radio-buttons label:last-child {
        border-left: 1px solid #DADCE0;
      }

      .radio-buttons .tooltip label:first-child {
        border-right: 1px solid #DADCE0;
      }

      .radio-buttons label:hover {
        color: #0073e4;
      }

      .radio-buttons .tooltip label:hover {
        color: #0073e4;
      }

      .radio-buttons input[type="radio"]:checked+label {
        background-color: rgba(0, 115, 228, 0.2);
        border: 2px solid #0073e4;
        color: #0073e4;
      }

      .radio-buttons input[type="radio"]:checked + .tooltip label {
        background-color: rgba(0, 115, 228, 0.2);
        border: 2px solid #0073e4;
        color: #0073e4;
      }


      .radio-buttons #button {
        padding-right: 5px;
        margin-left: 5px;
        margin-right: 0px;
        font-size:18px;
        font-weight: bold;
        cursor: pointer;
        color: black;
        background-color: #ffffff;
        border: 2px solid #DADCE0;
      }

      .radio-buttons #button:hover {
        color: #0073e4;
      }

      .collapsible::before {
        content: "▶";
        margin-right: 1%;
      }

      .collapsible.down-arrow::before {
        content: "▼";
      }

      .collapsible.right-arrow::before {
        content: "▶";
      }

      .collapsible {
        cursor: pointer;
      }

      .collapsible-bar {
        width: 100%;
        color: #214d87;
        display: none;
      }

    </style>
    <script>{{ plotlyjs|safe }}</script>
  </head>
  <body>
    {{ macros.render_sidebar(model_card) }}
    <main id="container">
      {% for name, section in model_card %}
        {% if name == "overview" %}
          {{ macros.render_overview(name, section) }}
        {% else %}
          {{ macros.render_section(model_card, name, section) }}
        {% endif %}
      {% endfor %}
    </main>
  </body>
</html>


{% block javascript %}
    <script type="text/javascript">
        {% include "plot.js" %}
        {% include "button.js" %}
    </script>
{% endblock %}


<script>
  function multipleStringLines(title) {
      if (title.length > 50) { // check if greater than threshold!
                  let y_axis = title.split(' ');    //break into words
                  let interval = title.split(' ').length / 2;     //2-lines
                  return y_axis.slice(0, interval).join(' ') + '<br>' + y_axis.slice(interval, y_axis.length).join(' ');
      }
      return title;
  }

  function isInView(element) {
    // return true if element is in view
    var rect     = element.getBoundingClientRect(),
        vWidth   = window.innerWidth || document.documentElement.clientWidth,
        vHeight  = window.innerHeight || document.documentElement.clientHeight,
        efp      = function (x, y) { return document.elementFromPoint(x, y) };

    // Return false if it's not in the viewport
    if (rect.right < 0 || rect.bottom < 0
            || rect.left > vWidth || rect.top > vHeight - 2*vHeight/3)  {
        return false;
            }
    else {
      return true;
    }
  }
  document.addEventListener('scroll', setActiveButton);
  setActiveButton();
  generate_model_card_plot();

  const plot = document.getElementById('plot');
  const inputs_all = document.querySelectorAll('#slice-selection input[type="radio"]');
  const plot_selection = document.querySelectorAll('#plot-selection input[type="radio"]');
  var selections = [null, null, null, null, null, null, null, null, null, null, null];
  var plot_colors = [
    "rgb(0, 115, 228)",
    "rgb(31, 119, 180)",
    "rgb(255, 127, 14)",
    "rgb(44, 160, 44)",
    "rgb(214, 39, 40)",
    "rgb(148, 103, 189)",
    "rgb(140, 86, 75)",
    "rgb(227, 119, 194)",
    "rgb(127, 127, 127)",
    "rgb(188, 189, 34)",
    "rgb(23, 190, 207)"
  ];

  // create global variable for max_n_evals
  var histories = JSON.parse({{ get_histories(model_card)|safe|tojson }});
  // get max_n_evals from histories
  var history_data = [];
  for (let i = 0; i < histories[0].length; i++) {
  history_data.push(parseFloat(histories[0][i]));
  }
  var max_n_evals = history_data.length;

// Add event listeners to radio buttons
  for (let input of inputs_all) {
  input.addEventListener('change', updatePlot);
  }
  // Add event listener to update plot when window is resized
  window.addEventListener('resize', updatePlot);
  for (let selection of plot_selection) {
  selection.addEventListener('change', updatePlotSelection);
  }


  // Initial update when the page loads
  updatePlot();
  document.addEventListener('DOMContentLoaded', setCollapseButton);

  function updateLastNEvals() {
  var n_evals_slider_p = document.getElementById("n_evals_slider_p");
  var slider_p_num = document.getElementById("slider_p_num");
  var n_evals_slider_pot = document.getElementById("n_evals_slider_pot");
  var slider_pot_num = document.getElementById("slider_pot_num");

  n_evals_slider_p.max = max_n_evals;
  n_evals_slider_pot.max = max_n_evals;

  var last_n_evals = {{ model_card.overview.last_n_evals }};

  if (last_n_evals == 0) {
      n_evals_slider_p.value = max_n_evals;
      slider_p_num.innerHTML = n_evals_slider_p.value;
      n_evals_slider_pot.value = max_n_evals;
      slider_pot_num.innerHTML = n_evals_slider_pot.value;
  }
  generate_model_card_plot();
  updatePlot();

  if (n_evals_slider_p !== null) {
      n_evals_slider_p.oninput = function() {
          slider_p_num.innerHTML = this.value;
          generate_model_card_plot();
      }
  }
  if (n_evals_slider_pot !== null) {
      n_evals_slider_pot.oninput = function() {
          slider_pot_num.innerHTML = this.value;
          updatePlot();
      }
      }
  }
  document.addEventListener('DOMContentLoaded', updateLastNEvals);
</script>
